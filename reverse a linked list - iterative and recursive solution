//Introduction and Implementation of Linked List
#include <bits/stdc++.h>
using namespace std;

class node
{
public:
    int data;
    node *next;
    node(int data)
    {
        this->data = data;
        next = NULL;
    }
};

void insertAtTail(node *&head, int data)
{
    node *n = new node(data);
    if (head == NULL)
    {
        head = n;
        return;
    }
    node *temp = head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = n;
}

void display(node *head)
{
    node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << "->";
        temp = temp->next;
    }
    cout << "NULL";
}

//Iterative solution
// void reverse(node *&head)
// {
//     if (head->next == NULL)
//         return;
//     node *curr, *prev, *forward;
//     prev = NULL;
//     curr = head;
//     while (curr != NULL)
//     {
//         forward = curr->next;
//         curr->next = prev;
//         prev = curr;
//         curr = forward;
//     }
//     head = prev;
// }

//Recursive Approach
void reverse(node *&head, node*temp)
{
    if(temp->next==NULL)
    {
        head=temp;
        return;
    }
    reverse(head,temp->next);
    node *q=temp->next;
    q->next=temp;
    temp->next=NULL;
}

int main()
{
    node *head = NULL;
    insertAtTail(head, 1);
    insertAtTail(head, 2);
    insertAtTail(head, 3);
    insertAtTail(head, 4);
    insertAtTail(head, 5);
    node *temp=head;
    reverse(head,temp);
    display(head);
    return 0;
}
