// Kth smallest
#include<bits/stdc++.h>
using namespace std;

int pivot(int arr[],int l,int r)
{
    int pivotEle=arr[r];
    int i=l-1;
    for(int j=l;j<r;j++)
    {
        if(arr[j]<=pivotEle)
        {
            i++;
            swap(arr[i],arr[j]);
        }
    }
    swap(arr[i+1],arr[r]);
    return i+1;
}
int kthSmall(int arr[],int l,int r,int k)
{
    if(k>0 && k<=(r-l+1))
    {
        int pi=pivot(arr,l,r);
        if(pi-l==k-1) 
        {
            return arr[pi];
        }
         if(pi-l<k-1)// right side
        {
            return kthSmall(arr,pi+1,r,k-pi+l-1);
        }
        // left side
        return kthSmall(arr,l,pi-1,k);
        
    }
    return INT_MAX;
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) cin>>arr[i];
    int k;
    cin>>k;
    cout<<kthSmall(arr,0,n-1,k);
    return 0;
}
